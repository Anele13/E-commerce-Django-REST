{"ast":null,"code":"var _jsxFileName = \"/home/anele/Escritorio/react-modelos/ecommerce/src/components/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport { Form, Input, Button, Checkbox } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst onFinish = values => {\n  console.log('Success:', values);\n};\n\nconst onFinishFailed = errorInfo => {\n  console.log('Failed:', errorInfo);\n};\n\nclass Login extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Remember me\")), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create()(Login);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","map":{"version":3,"sources":["/home/anele/Escritorio/react-modelos/ecommerce/src/components/Login.js"],"names":["React","connect","NavLink","actions","Form","Input","Button","Checkbox","layout","labelCol","span","wrapperCol","tailLayout","offset","onFinish","values","console","log","onFinishFailed","errorInfo","Login","Component","render","remember","required","message","WrappedNormalLoginForm","create","mapStateToProps","state","loading","error","mapDispatchToProps","dispatch","onAuth","username","password","authLogin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,MAA9C;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE;AADA,GADC;AAIXC,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE;AADE;AAJD,CAAf;AASA,MAAME,UAAU,GAAG;AACfD,EAAAA,UAAU,EAAE;AACRE,IAAAA,MAAM,EAAE,CADA;AAERH,IAAAA,IAAI,EAAE;AAFE;AADG,CAAnB;;AAOA,MAAMI,QAAQ,GAAGC,MAAM,IAAI;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACH,CAFD;;AAIA,MAAMG,cAAc,GAAGC,SAAS,IAAI;AAChCH,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,SAAvB;AACH,CAFD;;AAIA,MAAMC,KAAN,SAAoBpB,KAAK,CAACqB,SAA1B,CAAmC;AAG/BC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,oBAAUd,MAAV;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,aAAa,EAAE;AAACe,QAAAA,QAAQ,EAAE;AAAX,OAA/C;AAAkE,MAAA,QAAQ,EAAET,QAA5E;AAAuF,MAAA,cAAc,EAAEI,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA,eAEA,oBAAC,IAAD,CAAM,IAAN;AACA,MAAA,KAAK,EAAC,UADN;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,KAAK,EAAE,CACL;AACEM,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,CAFA,eAeF,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,CACL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CAfE,eA4BF,oBAAC,IAAD,CAAM,IAAN,oBAAeb,UAAf;AAA2B,MAAA,IAAI,EAAC,UAAhC;AAA2C,MAAA,aAAa,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CA5BE,eAgCF,oBAAC,IAAD,CAAM,IAAN,oBAAeA,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAhCE,CADJ;AAwCH;;AA5C8B;;AAgDnC,MAAMc,sBAAsB,GAAGtB,IAAI,CAACuB,MAAL,GAAcP,KAAd,CAA/B;;AAEA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADZ;AAEHC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,MAAM,EAAE,CAACC,QAAD,EAAWC,QAAX,KAAwBH,QAAQ,CAAC9B,OAAO,CAACkC,SAAR,CAAkBF,QAAlB,EAA4BC,QAA5B,CAAD;AADrC,GAAP;AAGH,CAJD;;AAMA,eAAenC,OAAO,CAAC2B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CN,sBAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport { Form, Input, Button, Checkbox } from 'antd';\n\n\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n  };\n\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n}\n\nconst onFinish = values => {\n    console.log('Success:', values);\n};\n\nconst onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n};\n\nclass Login extends React.Component{\n    \n\n    render(){\n        return(\n            <div>\n            <Form {...layout}  name=\"basic\" initialValues={{remember: true,}} onFinish={onFinish}  onFinishFailed={onFinishFailed}></Form>\n            <Form.Item \n            label=\"Username\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your username!',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n    \n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n    \n          <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n    \n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n          </div>\n        )\n    }\n}\n\n\nconst WrappedNormalLoginForm = Form.create()(Login);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/anele/Escritorio/react-modelos/ecommerce/src/components/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { Container } from 'react-bootstrap';\n\nclass Demo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.formRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.formRef.current.setFieldsValue({\n      username: 'Bamboo'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      ref: this.formRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"username\",\n      rules: [{\n        required: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo);","map":{"version":3,"sources":["/home/anele/Escritorio/react-modelos/ecommerce/src/components/Login.js"],"names":["React","connect","NavLink","actions","Form","Input","Button","Checkbox","Container","Demo","Component","formRef","createRef","componentDidMount","current","setFieldsValue","username","render","required","mapStateToProps","state","loading","error","mapDispatchToProps","dispatch","onAuth","password","authLogin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,MAA9C;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAGA,MAAMC,IAAN,SAAmBT,KAAK,CAACU,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,OAD+B,GACrBX,KAAK,CAACY,SAAN,EADqB;AAAA;;AAG/BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,OAAL,CAAaG,OAAb,CAAqBC,cAArB,CAAoC;AAClCC,MAAAA,QAAQ,EAAE;AADwB,KAApC;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,KAAKN,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAE,CAAC;AAAEO,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA,CADJ,CADF;AASD;;AAnB8B;;AAuBnC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADZ;AAEHC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,MAAM,EAAE,CAACT,QAAD,EAAWU,QAAX,KAAwBF,QAAQ,CAACrB,OAAO,CAACwB,SAAR,CAAkBX,QAAlB,EAA4BU,QAA5B,CAAD;AADrC,GAAP;AAGH,CAJD;;AAMA,eAAezB,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cd,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { Container } from 'react-bootstrap';\n\n\nclass Demo extends React.Component {\n    formRef = React.createRef();\n  \n    componentDidMount() {\n      this.formRef.current.setFieldsValue({\n        username: 'Bamboo',\n      });\n    }\n  \n    render() {\n      return (\n        <Container fluid>\n            <Form ref={this.formRef}>\n            <Form.Item name=\"username\" rules={[{ required: true }]}>\n                <Input />\n            </Form.Item>\n            </Form>\n        </Container>\n        );\n    }\n  }\n\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo);"]},"metadata":{},"sourceType":"module"}